<project  default="">
<!--name=" Javalanche Mutation Include - File to include from a projects ant build file to enable mutation testing"-->	
	
	<property name="mutation.base.dir" value="${javalanche.projects.location}/mutationTest/" />
	<property name="mutation.base.dir" value="${javalanche.projects.location}/util/target/classes" />
	<property name="javalanche.mutation.javaagent" value="${mutation.base.dir}/target/javaagent.jar" />
	<property name="mutation.classes.dir" value="${mutation.base.dir}/target/classes" />
	<property name="mutation.classes.dir" value="${mutation.base.dir}/target/classes" />
	<property name="mutation.jars.dir" value="${mutation.base.dir}/target/javalanche-0.1-dist.dir/lib/" />
	<property name="javalanche.mutation.output.dir" value="${basedir}/mutation-files" />
	
	<path id="mutation.classpath">
		<pathelement location="${mutation.classes.dir}"/>
		<pathelement location="${javalanche.projects.location}/util/target/classes" />
		<fileset dir="${mutation.jars.dir}" includes="*.jar"/>
	</path>
	
	<target name="testTask" description="* test the javalanche task (should behave in the same way as the regular test task)">
		<path id="testTask.javalanche.classpath.add">
			<path refid="mutation.classpath"/>
		</path>

		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value="-Dmutation.run.mode=off" />
			<reference refid="testTask.javalanche.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	<target name="testTask2" description="* ">
		<property name="test.task.2.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="test.task.2.memory" value="-Xmx1524m"/>
		<property name="test.task.2.mutation.run.mode" value="-Dmutation.run.mode=test1"/>
		<property name="test.task.2.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="test.task.2.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="test.task.2.verbose" value="-verbose"/>
		
		
		<path id="test.task.2.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<!--${test.task.2.verbose}-->
			<param name="javalanche.arg.line" value="  ${test.task.2.mutation.javaagent} ${test.task.2.memory} ${test.task.2.mutation.run.mode} ${test.task.2.javalanche.package.prefix} ${test.task.2.javalanche.project.test.suite} " />
			<reference refid="test.task.2.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	

	<target name="cleanJavalancheMutation" description="* delete all files produced by javalanche">
		<delete dir="${javalanche.mutation.output.dir}"/>
	</target>
	
	<target name="runMake">
		<exec executable="make" spawn="false">
			<arg value="-j5"/>
		</exec>
	</target>
	
	<target name="scan" description="* scans the project for mutations">
		
		<property name="scan.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="scan.memory" value="-Xmx1524m"/>
		<property name="scan.mutation.run.mode" value="-Dmutation.run.mode=scan"/>
		<property name="scan.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="scan.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		
		
		<path id="scan.javalanche.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value=" ${scan.mutation.javaagent} ${scan.memory} ${scan.mutation.run.mode} ${scan.javalanche.package.prefix} ${scan.javalanche.project.test.suite}" />
			<reference refid="scan.javalanche.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	<target name="createTasks" description="* create task files that are used to execute the mutations">
		<mkdir dir="${javalanche.mutation.output.dir}"/>
		
		<java classname="de.unisb.cs.st.javalanche.mutation.run.threaded.task.MutationTaskCreator" maxmemory="1024m" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<sysproperty key="mutation.number.of.tasks" value="100" />
			<sysproperty key="mutation.mutations.per.task" value="400" />
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
    <target name="createTasksFew">
		<mkdir dir="${javalanche.mutation.output.dir}"/>
		
		<java classname="de.unisb.cs.st.javalanche.mutation.run.threaded.task.MutationTaskCreator" maxmemory="1024m" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<sysproperty key="mutation.number.of.tasks" value="10" />
			<sysproperty key="mutation.mutations.per.task" value="10" />
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	
	<target name="runMutations" description="* run a given mutation task">
		<property name="run.mutations.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="run.mutations.memory" value="-Xmx1524m"/>
		<property name="run.mutations.mutation.run.mode" value="-Dmutation.run.mode=mutation"/>
		<property name="run.mutations.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="run.mutations.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="run.mutations.mutation.file" value="-Dmutation.file=${mutation.file}"/>
		<property name="run.mutations.mutation.result.file" value="-Dmutation.result.file=${mutation.result.file}"/>
		<property name="run.mutations.verbose" value="-verbose"/>
		
		
		<path id="run.mutations.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<!--${run.mutations.verbose}-->
			<param name="javalanche.arg.line" value="  ${run.mutations.mutation.javaagent} ${run.mutations.memory} ${run.mutations.mutation.run.mode} ${run.mutations.javalanche.package.prefix} ${run.mutations.javalanche.project.test.suite} ${run.mutations.mutation.file} ${run.mutations.mutation.result.file} " />
			<reference refid="run.mutations.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	
	<target name="generateMutationMakefile" description="* create a Makefile for the mutation tasks">
		<java dir="${basedir}" fork="true" classname="de.unisb.cs.st.javalanche.mutation.util.MutationMakeFileGenerator">
			<classpath refid="mutation.classpath"/>
			<sysproperty key="mutation.package.prefix" value="${project.prefix}"/>
			<sysproperty key="mutation.comand" value="${basedir}/runMutations.sh"/>
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
		</java>
	</target>

	<target name="analyzeResults" description="* analyze the mutation test results.">
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.AnalyzeMain" maxmemory="1024m" fork="true">
			<jvmarg value="-Dmutation.package.prefix=${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>

<!--
Additional Stuff
-->
	<target name="deleteResults" description="* delete mutation results for this project">
		<echo> Deleting mutation result with prefix: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.ResultDeleter" maxmemory="2048m" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	<target name="deleteSingleResult" description="* delete result for single specified mutation (property ${mutation.id}) ">
		<echo> Deleting mutation with id: ${mutation.id} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.ResultDeleter" maxmemory="512m" fork="true">
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
			<arg value="${mutation.id}"/>
		</java>
	</target>
	
	
	<target name="deleteMutations" description="* delete mutations for this project">
		<echo> Deleting mutations with prefix: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.MutationDeleter" maxmemory="2048m" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	<target name="displayCoverageData" description="* display coverage data for this project">
		<echo> Coverage data for project: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.util.DisplayCoverageData" maxmemory="2048m" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>

	</project>
