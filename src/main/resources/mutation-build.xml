<project  default="">
<!--name=" Javalanche Mutation Include - File to include from a projects ant build file to enable mutation testing"-->	
	
	<property name="mutation.base.dir" value="${javalanche.projects.location}/mutationTest/" />
	<property name="javalanche.mutation.javaagent" value="${mutation.base.dir}/target/javaagent.jar" />
	<property name="mutation.classes.dir" value="${mutation.base.dir}/target/classes" />
	<property name="mutation.jars.dir" value="${mutation.base.dir}/target/javalanche-mutation-0.1-dist.dir/lib/" />
	<property name="javalanche.mutation.output.dir" value="${basedir}/mutation-files" />
	
	<property name="javalanche.maxmemory" value="2048m" />
	
	<path id="mutation.classpath">
		<pathelement location="${mutation.classes.dir}"/>
		<pathelement location="${javalanche.projects.location}/util/target/classes" />
		<fileset dir="${mutation.jars.dir}" includes="*.jar"/>
	</path>
	
	<target name="testTask" description="* test the javalanche task (should behave in the same way as the regular test task)">
		<path id="testTask.javalanche.classpath.add">
			<path refid="mutation.classpath"/>
		</path>

		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value="-Dmutation.run.mode=off" />
			<reference refid="testTask.javalanche.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	<target name="testTask2" description="* ">
		<property name="test.task.2.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="test.task.2.memory" value="-Xmx1524m"/>
		<property name="test.task.2.mutation.run.mode" value="-Dmutation.run.mode=test1"/>
		<property name="test.task.2.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="test.task.2.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="test.task.2.verbose" value="-verbose"/>
		

		
		
		<path id="test.task.2.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<!--${test.task.2.verbose}-->
			<param name="javalanche.arg.line" value="  ${test.task.2.mutation.javaagent} ${test.task.2.memory} ${test.task.2.mutation.run.mode} ${test.task.2.javalanche.package.prefix} ${test.task.2.javalanche.project.test.suite} " />
			<reference refid="test.task.2.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	

	<target name="cleanJavalancheMutation" description="* delete all files produced by javalanche">
		<delete dir="${javalanche.mutation.output.dir}"/>
	</target>
	
	<target name="runMake">
		<exec executable="make" spawn="false">
			<arg value="-j5"/>
		</exec>
	</target>
	
	<target name="scan" description="* scans the project for mutations">
		
		<property name="scan.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="scan.memory" value="-Xmx1524m"/>
		<property name="scan.mutation.run.mode" value="-Dmutation.run.mode=scan"/>
		<property name="scan.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="scan.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<!--property name="scan.bootclasspath" value="-Xbootclasspath/a:${mutation.classes.dir}:${mutation.jars.dir}/adabu2-core-0.4-SNAPSHOT.jar:${mutation.jars.dir}/adabu2-hoare-0.4-SNAPSHOT.jar:${mutation.jars.dir}/antlr-2.7.6.jar:${mutation.jars.dir}/asm-3.0.jar:${mutation.jars.dir}/asm-all-3.0.jar:${mutation.jars.dir}/asm-analysis-2.2.1.jar:${mutation.jars.dir}/asm-commons-2.2.1.jar:${mutation.jars.dir}/asm-tree-2.2.1.jar:${mutation.jars.dir}/asm-util-2.2.1.jar:${mutation.jars.dir}/bytecodeTransformer-1.0-SNAPSHOT.jar:${mutation.jars.dir}/c3p0-0.9.1.1.jar:${mutation.jars.dir}/cglib-2.1_3.jar:${mutation.jars.dir}/commons-collections-2.1.1.jar:${mutation.jars.dir}/commons-io-1.3.jar:${mutation.jars.dir}/commons-lang-2.4.jar:${mutation.jars.dir}/daikon-local.jar:${mutation.jars.dir}/dom4j-1.6.1.jar:${mutation.jars.dir}/ds-util-0.1.jar:${mutation.jars.dir}/ehcache-1.2.3.jar:${mutation.jars.dir}/freemarker-2.3.4.jar:${mutation.jars.dir}/google-collect-snapshot-20080530.jar:${mutation.jars.dir}/hibernate-3.2.2.ga.jar:${mutation.jars.dir}/hibernate-annotations-3.3.0.ga.jar:${mutation.jars.dir}/hibernate-commons-annotations-3.3.0.ga.jar:${mutation.jars.dir}/hibernate-tools-3.2.0.beta9a.jar:${mutation.jars.dir}/hsqldb-1.8.0.1.jar:${mutation.jars.dir}/invariants-0.1.jar:${mutation.jars.dir}/jcommon-1.0.0.jar:${mutation.jars.dir}/jfreechart-1.0.0.jar:${mutation.jars.dir}/jta-1.0.1B.jar:${mutation.jars.dir}/jtidy-r8-20060801.jar:${mutation.jars.dir}/junit-4.1.jar:${mutation.jars.dir}/log4j-1.2.9.jar:${mutation.jars.dir}/mysql-connector-java-nightly.jar:${mutation.jars.dir}/persistence-api-1.0.jar:${mutation.jars.dir}/prefuse-beta-20060220.jar:${mutation.jars.dir}/sibrelib-local.jar:${mutation.jars.dir}/util-0.1.jar:${mutation.jars.dir}/xpp3_min-1.1.3.4.O.jar:${mutation.jars.dir}/xstream-1.2.jar:/scratch/commons-logging-1.1.jar"/>
		-->
		<property name="scan.bootclasspath" value="-Xbootclasspath/a:${javalanche.projects.location}/mutationTest/target/javalanche-mutation-bootclasspath.jar"/>
		<path id="scan.javalanche.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value=" ${scan.memory} ${scan.bootclasspath} ${scan.mutation.javaagent}  ${scan.mutation.run.mode} ${scan.javalanche.package.prefix} ${scan.javalanche.project.test.suite}" />
			<reference refid="scan.javalanche.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	<target name="createTasks" description="* create task files that are used to execute the mutations">
		<mkdir dir="${javalanche.mutation.output.dir}"/>
		
		<java classname="de.unisb.cs.st.javalanche.mutation.run.threaded.task.MutationTaskCreator" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<sysproperty key="mutation.number.of.tasks" value="100" />
			<sysproperty key="mutation.mutations.per.task" value="400" />
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
    <target name="createTasksFew">
		<mkdir dir="${javalanche.mutation.output.dir}"/>
		
		<java classname="de.unisb.cs.st.javalanche.mutation.run.threaded.task.MutationTaskCreator" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<sysproperty key="mutation.number.of.tasks" value="10" />
			<sysproperty key="mutation.mutations.per.task" value="10" />
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	
	<target name="runMutations" description="* run a given mutation task">
		<property name="run.mutations.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="run.mutations.memory" value="-Xmx1524m"/>
		<property name="run.mutations.mutation.run.mode" value="-Dmutation.run.mode=mutation"/>
		<property name="run.mutations.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="run.mutations.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="run.mutations.mutation.file" value="-Dmutation.file=${mutation.file}"/>
		<property name="run.mutations.mutation.result.file" value="-Dmutation.result.file=${mutation.result.file}"/>
		<property name="run.mutations.verbose" value="-verbose"/>
		<property name="run.mutations.listener" value="-Djavalanche.mutation.test.listener=de.unisb.cs.st.javalanche.mutation.runtime.jmx.JmxMutationTestListener"/>
		<path id="run.mutations.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
			<!--${run.mutations.verbose}-->
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value="  ${run.mutations.mutation.javaagent} ${run.mutations.memory} ${run.mutations.mutation.run.mode} ${run.mutations.javalanche.package.prefix} ${run.mutations.javalanche.project.test.suite} ${run.mutations.mutation.file} ${run.mutations.mutation.result.file} ${run.mutations.listener}" />
			<reference refid="run.mutations.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>

		<!--antcall target="runMutationsInternal">
			<param name="javalanche.mutaiton.runMode" value="mutation" />
		</antcall-->
	</target>
	
	
	<target name="runMutationsInvariant" description="* run a given mutation task wiht enabled invariant checkers (Javalanche invariants build file also has to be included)">
		<property name="run.mutations.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="run.mutations.memory" value="-Xmx1524m"/>
		<property name="run.mutations.mutation.run.mode" value="-Dmutation.run.mode=mutation-invariant"/>
		<property name="run.mutations.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="run.mutations.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="run.mutations.mutation.file" value="-Dmutation.file=${mutation.file}"/>
		<property name="run.mutations.mutation.result.file" value="-Dmutation.result.file=${mutation.result.file}"/>
		<property name="run.mutations.verbose" value="-verbose"/>
		<property name="run.mutations.field.file.arg" value="-Djavalanche.invariant.field.file=${field.file}"/>
		<property name="run.mutations.checker.file" value="-Dinvariant.checker.file=${invariant.checker.file}"/>
		<property name="run.mutations.verbose.summary" value="-Dverbose.invariant.summary=false"/>
		<property name="run.mutations.javalanche.invariant.mode" value="-Dinvariant.mode=INVARIANT"/>
		<property name="run.mutations.listener" value="-Djavalanche.mutation.test.listener=de.unisb.cs.st.javalanche.mutation.runtime.jmx.JmxMutationTestListener"/>

		<path id="check.invariant.javalanche.classpath.add">
		</path>
	
		<path id="run.mutations.classpath.add">
			<path refid="mutation.classpath"/>
			<path refid="invariant.classpath"/>
		</path>
		<!--${run.mutations.verbose}-->
		<antcall target="test-javalanche">
			<param name="javalanche.arg.line" value=" ${run.mutations.mutation.javaagent} ${run.mutations.memory} ${run.mutations.mutation.run.mode} ${run.mutations.javalanche.package.prefix} ${run.mutations.javalanche.project.test.suite} ${run.mutations.mutation.file} ${run.mutations.mutation.result.file} ${run.mutations.field.file.arg} ${run.mutations.checker.file} ${run.mutations.verbose.summary} ${run.mutations.javalanche.invariant.mode} ${run.mutations.listener} " />
			<reference refid="run.mutations.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>
	
	<target name="runMutationsInternal">
		<property name="run.mutations.mutation.javaagent" value="-javaagent:${javalanche.mutation.javaagent}"/>
		<property name="run.mutations.memory" value="-Xmx1524m"/>
		<property name="run.mutations.mutation.run.mode" value="-Dmutation.run.mode=${javalanche.mutaiton.runMode}"/>
		<property name="run.mutations.javalanche.package.prefix" value="-Dmutation.package.prefix=${project.prefix}"/>
		<property name="run.mutations.javalanche.project.test.suite" value="-Dmutation.test.suite=${project.test.suite}"/>
		<property name="run.mutations.mutation.file" value="-Dmutation.file=${mutation.file}"/>
		<property name="run.mutations.mutation.result.file" value="-Dmutation.result.file=${mutation.result.file}"/>
		<property name="run.mutations.verbose" value="-verbose"/>
		
		
		<path id="run.mutations.classpath.add">
			<path refid="mutation.classpath"/>
		</path>
		
		<antcall target="test-javalanche">
			<!--${run.mutations.verbose}-->
			<param name="javalanche.arg.line" value="  ${run.mutations.mutation.javaagent} ${run.mutations.memory} ${run.mutations.mutation.run.mode} ${run.mutations.javalanche.package.prefix} ${run.mutations.javalanche.project.test.suite} ${run.mutations.mutation.file} ${run.mutations.mutation.result.file} " />
			<reference refid="run.mutations.classpath.add" torefid="javalanche.classpath.add"/>
		</antcall>
	</target>

	
	
	<target name="generateMutationMakefile" description="* create a Makefile for the mutation tasks">
	<condition property="prog.arg" value="${makefile.add}" else="">
	<isset property="makefile.add"/>
	</condition>
	<java dir="${basedir}" fork="true" classname="de.unisb.cs.st.javalanche.mutation.util.MutationMakeFileGenerator">
			<classpath refid="mutation.classpath"/>
			<sysproperty key="mutation.package.prefix" value="${project.prefix}"/>
			<sysproperty key="mutation.comand" value="${basedir}/runMutations.sh"/>
			<sysproperty key="javalanche.mutation.output.dir" value="${javalanche.mutation.output.dir}" />
			<arg line="${prog.arg}"/>
		</java>
	</target>

	<target name="analyzeResults" description="* analyze the mutation test results.">
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.AnalyzeMain" maxmemory="${javalanche.maxmemory}" fork="true">
			<jvmarg value="-Dmutation.package.prefix=${project.prefix}" />
<!--						<jvmarg value="-Djavalanche.mutation.analyzers=de.unisb.cs.st.javalanche.mutation.analyze.MutationPrioritizationAnalyzer" />-->
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>

<!--
Additional Stuff
-->
	<target name="deleteResults" description="* delete mutation results for this project">
		<echo> Deleting mutation result with prefix: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.ResultDeleter" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	<target name="deleteSingleResult" description="* delete result for single specified mutation (property -Dmutation.id=) ">
		<echo> Deleting result for mutation with id: ${mutation.id} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.ResultDeleter" maxmemory="${javalanche.maxmemory}" fork="true">
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
			<arg value="${mutation.id}"/>
		</java>
	</target>
	
		
	<target name="showMutation" description="* delete result for single specified mutation (property -Dmutation.id=) ">
		<echo> Display mutation with id: ${mutation.id} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.ShowMutation" maxmemory="${javalanche.maxmemory}" fork="true">
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
			<arg value="${mutation.id}"/>
		</java>
	</target>
	
	
	
	<target name="deleteMutations" description="* delete mutations for this project">
		<echo> Deleting mutations with prefix: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.analyze.tools.MutationDeleter" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	
	
	<target name="printBytecode" description="* print a classes bytecode (specified in property -Dclass.name=)">
		<echo> Printing bytecode for class: ${class.name} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.util.AsmUtil" fork="true">
			<sysproperty key="class.name" value="${class.name}" />
			<classpath>
			         <path refid="build.classpath"></path>
					 <path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	<target name="displayCoverageData" description="* display coverage data for this project">
		<echo> Coverage data for project: ${project.prefix} </echo>
		<java classname="de.unisb.cs.st.javalanche.mutation.util.DisplayCoverageData" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>

	
	<target name="startJmxClient" description="* start a jmx client that displays monitoring data for all mutation testsing processes">
		<java classname="de.unisb.cs.st.javalanche.mutation.runtime.jmx.MutationMxClient" maxmemory="${javalanche.maxmemory}" fork="true">
			<sysproperty key="mutation.package.prefix" value="${project.prefix}" />
			<classpath>
				<path refid="mutation.classpath" />
			</classpath>
		</java>
	</target>
	
	</project>
