export CVSROOT=:pserver:anonymous@dev.eclipse.org:/cvsroot/tools
cvs checkout org.aspectj/modules


edit build/sample.local.properties
# for non-release builds, versions should all be DEVELOPMENT
# except for build.version.base
build.version=DEVELOPMENT
build.version.base=1.5
build.version.long=DEVELOPMENT
build.version.short=DEVELOPMENT
java11.home=/System/Library/Frameworks/JavaVM.framework/Versions/1.3/Home
java13.home=/System/Library/Frameworks/JavaVM.framework/Versions/1.3/Home
java14.home=/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Home
java15.home=/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home

save as local.properties

chmod +x lib/ant/bin/ant
cd run-all-junit-tests/
../lib/ant/bin/ant

edit run-all-junit-tests/build.xml

add:
	<target name="test-testsuite"  description="test the testsuite">
		<antcall target="mutation-test-testsuite"/> 
	</target>
	
edit build/build.xml

	<property file="/Users/schuler/workspace/mutationTest/src/main/resources/mutation.incl.properties"/>

	<target name="mutation-test-testsuite"  description="test the testsuite">
		<antcall target="mutation-do-test-junit-test-testsuite"/> 
	</target>
	
	
	<target name="mutation-do-test-junit-test-testsuite" 
	    depends="init-taskdefs" 
		description="run junit tests for a module using module root or leaves">
		<property name="dtj.dir"
	    	location="${aj.junit.dir}/${module.name}"/>
	    <mkdir dir="${dtj.dir}"/>

	    <condition property="dtj.includes"
	        value="${junit.includes}"
	        else="${junit.rootSuites}">
	        <istrue value="${junit.leaves}"/>
	    </condition>
	    <condition property="dtj.excludes"
	        value="${junit.excludes}"
	        else="">
	        <istrue value="${junit.leaves}"/>
	    </condition>
      	
	    <junit 
	    	dir="${aspectj.modules.build.dir}"
      	    failureproperty="test-junit-${module.name}.failed"
      	    fork="on" 
      	    forkmode="perTest"
      	    maxmemory="400m"
      		includeAntRuntime="off" 
           	printsummary="yes" 
           	haltonfailure="${haltOnTestFailure}" >
           	<classpath>
				<pathelement location="${mutation.classes.dir}"/>
				<fileset dir="${mutation.jars.dir}" includes="*.jar"/>
				
           	    <pathelement location="${aj.jar.dir}/${module.name}-test-all.jar"/>
				<!-- see skipped libraries in Builder.properties -->
           	    <pathelement location="${jdk.tools.jar}"/>
            	<pathelement location="${aspectj.modules.lib.dir}/junit/junit.jar"/> 
           		<fileset dir="${aspectj.modules.lib.dir}/commons" includes="commons.jar"/>
           		<!-- XML api's used by loadtime, also needed when running under 1.3 per Ant FAQ -->
           	    <fileset dir="${aspectj.modules.lib.dir}/ant/lib" 
                	includes="ant.jar,ant-junit.jar,xml-apis.jar,xercesImpl.jar"/>
           	</classpath>
			
			<jvmarg value="-javaagent:${mutation.javaagent}"/>
			
			<jvmarg value="-Dmutation.run.mode=test1"/>
			<jvmarg value="-Dmutation.package.prefix=org.aspectj"/>
			<jvmarg value="-Dmutation.test.suite=AllTests"/>
			
    		<jvmarg value="-Daspectjrtpath=${lib.test.aspectjrt.jar}" />
	        <formatter type="xml"/>
	        <batchtest todir="${dtj.dir}">
	            <fileset dir="${modules.dir}/${module.name}/testsrc"
	                includes="${dtj.includes}"
	                excludes="${dtj.excludes}"/>
            </batchtest>        
	    </junit>
	    <report-if-failed text="JUnit tests for ${module.name} failed"
	        property="test-junit-${module.name}.failed"/>
    </target>
